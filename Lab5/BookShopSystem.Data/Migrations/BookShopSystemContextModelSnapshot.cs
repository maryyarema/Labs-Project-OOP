// <auto-generated />
using System;
using BookShopSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookShopSystem.Data.Migrations
{
    [DbContext(typeof(BookShopSystemContext))]
    partial class BookShopSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookShopSystem.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            FirstName = "Tomas",
                            LastName = "Shelby"
                        },
                        new
                        {
                            AuthorId = 2,
                            FirstName = "John",
                            LastName = "Straud"
                        },
                        new
                        {
                            AuthorId = 3,
                            FirstName = "Tim",
                            LastName = "Jackson"
                        },
                        new
                        {
                            AuthorId = 4,
                            FirstName = "Andry",
                            LastName = "Pocket"
                        },
                        new
                        {
                            AuthorId = 5,
                            FirstName = "Antoni",
                            LastName = "Backet"
                        });
                });

            modelBuilder.Entity("BookShopSystem.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("Copies")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("EditionType")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AgeRestriction = 0,
                            AuthorId = 4,
                            Copies = 5000,
                            Description = "A fantastic book about drama in society",
                            EditionType = 0,
                            Price = 1500.00m,
                            ReleaseDate = new DateTime(2021, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A Fanatic Heart"
                        },
                        new
                        {
                            BookId = 2,
                            AgeRestriction = 0,
                            AuthorId = 3,
                            Copies = 3040,
                            Description = "A book about humor",
                            EditionType = 1,
                            Price = 654.30m,
                            ReleaseDate = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A Handful of Dust"
                        },
                        new
                        {
                            BookId = 3,
                            AgeRestriction = 1,
                            AuthorId = 1,
                            Copies = 7500,
                            Description = "A book about horror",
                            EditionType = 2,
                            Price = 1230.00m,
                            ReleaseDate = new DateTime(2019, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A Passage to India"
                        },
                        new
                        {
                            BookId = 4,
                            AgeRestriction = 2,
                            AuthorId = 2,
                            Copies = 1500,
                            Description = "A book about mystery",
                            EditionType = 0,
                            Price = 130.00m,
                            ReleaseDate = new DateTime(2022, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "A Scanner Darkly"
                        },
                        new
                        {
                            BookId = 5,
                            AgeRestriction = 1,
                            AuthorId = 5,
                            Copies = 150,
                            Description = "A book about drama",
                            EditionType = 0,
                            Price = 132.00m,
                            ReleaseDate = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Look Homeward"
                        });
                });

            modelBuilder.Entity("BookShopSystem.Models.BookCategory", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategory");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            BookId = 2,
                            CategoryId = 4
                        },
                        new
                        {
                            BookId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            BookId = 4,
                            CategoryId = 3
                        },
                        new
                        {
                            BookId = 5,
                            CategoryId = 2
                        });
                });

            modelBuilder.Entity("BookShopSystem.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Horror"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Drama"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Mystery"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Humor"
                        });
                });

            modelBuilder.Entity("BookShopSystem.Models.Book", b =>
                {
                    b.HasOne("BookShopSystem.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BookShopSystem.Models.BookCategory", b =>
                {
                    b.HasOne("BookShopSystem.Models.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookShopSystem.Models.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BookShopSystem.Models.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookShopSystem.Models.Book", b =>
                {
                    b.Navigation("BookCategories");
                });

            modelBuilder.Entity("BookShopSystem.Models.Category", b =>
                {
                    b.Navigation("BookCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
